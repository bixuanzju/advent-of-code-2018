-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | It's the Advent of Code 2018!
@package aoc2018
@version 0.1.0.0

module AOC2018.Types
type Challenge = String -> String
type ChallengeMap = Map (Finite 25) (Map Char Challenge)
data ChallengeSpec
CS :: Finite 25 -> Char -> ChallengeSpec
[_csDay] :: ChallengeSpec -> Finite 25
[_csPart] :: ChallengeSpec -> Char

module AOC2018.Discover

-- | Meant to be called like:
--   
--   <pre>
--   mkChallengeMap $$(challengeList "src<i>AOC2018</i>Challenge")
--   </pre>
mkChallengeMap :: [(Finite 25, (Char, Challenge))] -> ChallengeMap
challengeList :: FilePath -> Q (TExp [(Finite 25, (Char, Challenge))])

module AOC2018.Challenge.Day01
day01a :: Challenge

module AOC2018.Util
strip :: String -> String
iterateMaybe :: (a -> Maybe a) -> a -> [a]

-- | Strict (!!)
(!!!) :: [a] -> Int -> a
dup :: a -> (a, a)
scanlT :: Traversable t => (b -> a -> b) -> b -> t a -> t b
scanrT :: Traversable t => (a -> b -> b) -> b -> t a -> t b

module AOC2018
challengeMap :: Map (Finite 25) (Map Char Challenge)
data ChallengePaths
CP :: !FilePath -> !FilePath -> !FilePath -> !FilePath -> ChallengePaths
[_cpDataUrl] :: ChallengePaths -> !FilePath
[_cpInput] :: ChallengePaths -> !FilePath
[_cpAnswer] :: ChallengePaths -> !FilePath
[_cpTests] :: ChallengePaths -> !FilePath
challengePaths :: ChallengeSpec -> ChallengePaths
data ChallengeData
CD :: !Either [String] String -> !Maybe String -> ![(String, Maybe String)] -> ChallengeData
[_cdInp] :: ChallengeData -> !Either [String] String
[_cdAns] :: ChallengeData -> !Maybe String
[_cdTests] :: ChallengeData -> ![(String, Maybe String)]
challengeData :: Maybe String -> ChallengeSpec -> IO ChallengeData
newtype Config
Cfg :: Maybe String -> Config
[_cfgSession] :: Config -> Maybe String
configFile :: FilePath -> IO Config
defConfPath :: FilePath
session :: FilePath -> IO (Maybe String)
instance GHC.Generics.Generic AOC2018.Config
instance GHC.Show.Show AOC2018.ChallengePaths
instance Data.Aeson.Types.ToJSON.ToJSON AOC2018.Config
instance Data.Aeson.Types.FromJSON.FromJSON AOC2018.Config
